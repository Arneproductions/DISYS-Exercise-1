/*
 * Mandatory exercise 1
 *
 * Mandatory exercse 1
 *
 * API version: 1.0.0
 * Generated by: Swagger Codegen (https://github.com/swagger-api/swagger-codegen.git)
 */

package endpoints

import (
	"fmt"
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

type Route struct {
	Name        string
	Method      string
	Pattern     string
	HandlerFunc http.HandlerFunc
}

type Routes []Route

func NewRouter() *mux.Router {
	router := mux.NewRouter().StrictSlash(true)
	for _, route := range routes {
		var handler http.Handler
		handler = route.HandlerFunc
		handler = Logger(handler, route.Name)

		router.
			Methods(route.Method).
			Path(route.Pattern).
			Name(route.Name).
			Handler(handler)
	}

	return router
}

func Index(w http.ResponseWriter, r *http.Request) {
	fmt.Fprintf(w, "Hello World!")
}

var routes = Routes{
	Route{
		"Index",
		"GET",
		"/v1/",
		Index,
	},

	Route{
		"AddCourse",
		strings.ToUpper("Post"),
		"/v1/Course",
		AddCourse,
	},

	Route{
		"AddPet",
		strings.ToUpper("Get"),
		"/v1/Course",
		AddPet,
	},

	Route{
		"AddStudentsToCourse",
		strings.ToUpper("Put"),
		"/v1/Course/{courseId}/addStudents",
		AddStudentsToCourse,
	},

	Route{
		"DeleteCourse",
		strings.ToUpper("Delete"),
		"/v1/Course/{courseId}",
		DeleteCourse,
	},

	Route{
		"RemoveStudentFromCourse",
		strings.ToUpper("Delete"),
		"/v1/Course/{courseId}/student/{studentId}",
		RemoveStudentFromCourse,
	},

	Route{
		"SatisfactionCourseCourseGet",
		strings.ToUpper("Get"),
		"/v1/satisfaction/course/{course}",
		SatisfactionCourseCourseGet,
	},

	Route{
		"SatisfactionPost",
		strings.ToUpper("Post"),
		"/v1/satisfaction",
		SatisfactionPost,
	},

	Route{
		"SatisfactionStudentStudentGet",
		strings.ToUpper("Get"),
		"/v1/satisfaction/student/{student}",
		SatisfactionStudentStudentGet,
	},

	Route{
		"CreateUser",
		strings.ToUpper("Post"),
		"/v1/user",
		CreateUser,
	},

	Route{
		"DeleteUser",
		strings.ToUpper("Delete"),
		"/v1/user/{id}",
		DeleteUser,
	},

	Route{
		"UpdateUser",
		strings.ToUpper("Put"),
		"/v1/user/{id}",
		UpdateUser,
	},

	Route{
		"UserGet",
		strings.ToUpper("Get"),
		"/v1/user",
		UserGet,
	},

	Route{
		"WorkloadCourseStudentGet",
		strings.ToUpper("Get"),
		"/v1/workload/{course}/{student}",
		WorkloadCourseStudentGet,
	},

	Route{
		"WorkloadPost",
		strings.ToUpper("Post"),
		"/v1/workload",
		WorkloadPost,
	},
}
